
receivers:
  otlp:
    protocols:
      http:
        # Bind to 0.0.0.0 to allow for `kubectl port-forward` to work
        # This may be susceptible to denial of service attacks - CWE-1327 https://cwe.mitre.org/data/definitions/1327.html
        endpoint: 0.0.0.0:4318
        # Since this collector needs to receive data from the web, enable cors for all origins
        # `allowed_origins` can be refined for your deployment domain
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"

processors:
  batch:
#  transform:
#    log_statements:
#      - context: log
#        statements:
##         - set(attributes["service"], resource["service"]["name"] where resource["service"]["name"] != nil
#    metric_statements:
#      - context: metric
#        statements:
##          - set(attributes["service"], resource["service"]["name"] where resource["service"]["name"] != nil
##          - set(description, "Measures the duration of inbound HTTP requests") where name == "http.server.duration"
#  # we can remove when this is fixed: https://github.com/open-telemetry/opentelemetry-demo/issues/826
#  filter/ottl:
#    error_mode: ignore
#    metrics:
#      metric:
#        - 'name == "queueSize"'

#  resourcedetectionprocessor:
#  attributesprocessor:
#  transform/logs:
#
exporters:
  debug:
#  otlp:
#    endpoint: '{{ include "otel-demo.name" . }}-jaeger-collector:4317'
#    tls:
#      insecure: true
  # Create an exporter to Prometheus (metrics)
#  prometheus:
#    endpoint: "0.0.0.0:9464"
#    resource_to_telemetry_conversion:
#      enabled: true
#    enable_open_metrics: true

connectors:
  intervalLogStats:
#  spanmetrics:

service:
  pipelines:
    logs:
      receivers: [ otlp ]
      processors: [ batch ]
      exporters: [ intervalLogStats ]
    metrics:
      receivers: [ otlp ]
      processors: [ batch ]
      exporters: [  debug ]
    metrics/logs:
      receivers: [intervalLogStats]
      exporters: [debug]
    traces:
      receivers: [ otlp ]
      processors: [ batch ]
      exporters: [ debug ]
